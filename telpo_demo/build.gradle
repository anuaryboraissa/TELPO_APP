apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 34
    namespace 'com.softnet.devicetester'
    defaultConfig {
        applicationId "com.softnet.devicetester"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 2
        versionName new Date().format("yyyyMMddHHmmss")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        ndk {
//            // Specifies the ABI configurations of your native
//            // libraries Gradle should build and package with your APK.
//            abiFilters  "armeabi-v7a"
//        }
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildTypes {
        debug {
            //release???????????
            minifyEnabled false
//            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        release {
            shrinkResources true
            minifyEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    buildFeatures.viewBinding = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding false
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'com.google.android.material:material:1.4.+'
    implementation 'androidx.activity:activity:1.9.2'
    implementation 'com.google.mlkit:vision-common:17.3.0'
    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:18.3.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

//    implementation project(':telpo_api')
//    implementation files('libs/core-3.1.0.jar')
//    implementation files('libs/telpo_api_20221115.aar')
//    implementation files('libs/SmartCardLib.jar')
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation 'androidx.biometric:biometric:1.2.0-alpha04'
    // ML Kit Barcode Scanning

    implementation 'com.google.mlkit:barcode-scanning:17.3.0'
    // CameraX core library
    implementation 'androidx.camera:camera-core:1.3.4'
    implementation 'androidx.camera:camera-camera2:1.3.4'
    implementation 'androidx.camera:camera-lifecycle:1.3.4'
    implementation 'androidx.camera:camera-view:1.3.4'
//     Optional: For Kotlin Coroutines support (if needed)
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'androidx.work:work-runtime:2.8.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    //for gpio
    implementation 'com.google.android.things:androidthings:1.0'

    //DELIVERY LOCKER
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'com.google.android.material:material:1.8.0'

    //printer2
    implementation 'com.itextpdf:itextg:5.5.10'
    implementation 'com.karumi:dexter:6.2.3'

}


task renameApp {
    def newPackageName = "com.softnet.devicetester"
    def newAppName = "Device Tester"

    doLast {
        // Update applicationId in build.gradle
        def gradleFile = file("build.gradle")
        gradleFile.text = gradleFile.text.replaceAll(/applicationId\s+"[^"]+"/, 'applicationId "com.softnet.devicetester"')

        // Update package name in AndroidManifest.xml
        def manifestFile = file("src/main/AndroidManifest.xml")
        manifestFile.text = manifestFile.text.replaceAll(/package="[^"]+"/, 'package="' + newPackageName + '"')

        // Update app_name in strings.xml
        def stringsFile = file("src/main/res/values/strings.xml")
        stringsFile.text = stringsFile.text.replaceAll(/<string name="app_name">.*<\/string>/, '<string name="app_name">' + newAppName + '</string>')
    }
}
